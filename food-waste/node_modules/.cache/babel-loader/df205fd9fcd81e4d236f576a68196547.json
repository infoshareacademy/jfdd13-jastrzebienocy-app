{"ast":null,"code":"var _jsxFileName = \"/home/jakub/Desktop/Repo/Food-Waste-App/food-waste/src/components/Filter.js\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst resultRenderer = ({\n  title\n}) => React.createElement(Label, {\n  content: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\nexport default class SearchExampleStandard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      resultRenderer: resultRenderer\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2)), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Options\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, JSON.stringify(source, null, 2)))));\n  }\n\n} // export default Filter;","map":{"version":3,"sources":["/home/jakub/Desktop/Repo/Food-Waste-App/food-waste/src/components/Filter.js"],"names":["PropTypes","_","faker","React","Component","Search","Grid","Header","Segment","Label","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","resultRenderer","propTypes","string","initialState","isLoading","results","value","SearchExampleStandard","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\n\nconst source = _.times(5, () => ({\n\ttitle: faker.company.companyName(),\n\tdescription: faker.company.catchPhrase(),\n\timage: faker.internet.avatar(),\n\tprice: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst resultRenderer = ({ title }) => <Label content={title} />;\n\nresultRenderer.propTypes = {\n\ttitle: PropTypes.string,\n\tdescription: PropTypes.string\n};\n\nconst initialState = { isLoading: false, results: [], value: '' };\n\nexport default class SearchExampleStandard extends Component {\n\tstate = initialState;\n\n\thandleResultSelect = (e, { result }) => this.setState({ value: result.title });\n\n\thandleSearchChange = (e, { value }) => {\n\t\tthis.setState({ isLoading: true, value });\n\n\t\tsetTimeout(() => {\n\t\t\tif (this.state.value.length < 1) return this.setState(initialState);\n\n\t\t\tconst re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\t\t\tconst isMatch = (result) => re.test(result.title);\n\n\t\t\tthis.setState({\n\t\t\t\tisLoading: false,\n\t\t\t\tresults: _.filter(source, isMatch)\n\t\t\t});\n\t\t}, 300);\n\t};\n\n\trender() {\n\t\tconst { isLoading, value, results } = this.state;\n\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t<Search\n\t\t\t\t\t\tloading={isLoading}\n\t\t\t\t\t\tonResultSelect={this.handleResultSelect}\n\t\t\t\t\t\tonSearchChange={_.debounce(this.handleSearchChange, 500, {\n\t\t\t\t\t\t\tleading: true\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tresults={results}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tresultRenderer={resultRenderer}\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t/>\n\t\t\t\t</Grid.Column>\n\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t<Segment>\n\t\t\t\t\t\t<Header>State</Header>\n\t\t\t\t\t\t<pre style={{ overflowX: 'auto' }}>{JSON.stringify(this.state, null, 2)}</pre>\n\t\t\t\t\t\t<Header>Options</Header>\n\t\t\t\t\t\t<pre style={{ overflowX: 'auto' }}>{JSON.stringify(source, null, 2)}</pre>\n\t\t\t\t\t</Segment>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\n// export default Filter;\n"]},"metadata":{},"sourceType":"module"}