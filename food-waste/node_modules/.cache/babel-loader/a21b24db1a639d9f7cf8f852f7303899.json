{"ast":null,"code":"var _jsxFileName = \"/home/jakub/Desktop/Repo/Food-Waste-App/food-waste/src/components/Filter.js\";\nimport React, { Component } from 'react';\n\nclass Search extends Component {\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Micha\\u0142\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Ania\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Kasia\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Tomek\")));\n  }\n\n  filterUsers(e) {\n    const text = e.currentTarget.value;\n    const filteredUsers = this.getFilteredUsersForText(text);\n    this.setState({\n      filteredUsers\n    });\n  }\n\n  getFilteredUsersForText(text) {\n    return new Promise(resolve => {\n      const time = (Math.random() + 1) * 250;\n      setTimeout(() => {\n        const filteredUsers = allUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()));\n        resolve(filteredUsers);\n      }, time);\n    });\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/jakub/Desktop/Repo/Food-Waste-App/food-waste/src/components/Filter.js"],"names":["React","Component","Search","render","filterUsers","e","text","currentTarget","value","filteredUsers","getFilteredUsersForText","setState","Promise","resolve","time","Math","random","setTimeout","allUsers","filter","user","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC9BE,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJD,CAFD,CADD;AAWA;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA7B;AACA,UAAMC,aAAa,GAAG,KAAKC,uBAAL,CAA6BJ,IAA7B,CAAtB;AACA,SAAKK,QAAL,CAAc;AACbF,MAAAA;AADa,KAAd;AAGA;;AAEDC,EAAAA,uBAAuB,CAACJ,IAAD,EAAO;AAC7B,WAAO,IAAIM,OAAJ,CAAaC,OAAD,IAAa;AAC/B,YAAMC,IAAI,GAAG,CAACC,IAAI,CAACC,MAAL,KAAgB,CAAjB,IAAsB,GAAnC;AACAC,MAAAA,UAAU,CAAC,MAAM;AAChB,cAAMR,aAAa,GAAGS,QAAQ,CAACC,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BhB,IAAI,CAACe,WAAL,EAA5B,CAA1B,CAAtB;AACAR,QAAAA,OAAO,CAACJ,aAAD,CAAP;AACA,OAHS,EAGPK,IAHO,CAAV;AAIA,KANM,CAAP;AAOA;;AA9B6B;;AAiC/B,eAAeZ,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Search extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<input type=\"search\" />\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Micha≈Ç</li>\n\t\t\t\t\t<li>Ania</li>\n\t\t\t\t\t<li>Kasia</li>\n\t\t\t\t\t<li>Tomek</li>\n\t\t\t\t</ul>\n\t\t\t</form>\n\t\t);\n\t}\n\tfilterUsers(e) {\n\t\tconst text = e.currentTarget.value;\n\t\tconst filteredUsers = this.getFilteredUsersForText(text);\n\t\tthis.setState({\n\t\t\tfilteredUsers\n\t\t});\n\t}\n\n\tgetFilteredUsersForText(text) {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst time = (Math.random() + 1) * 250;\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst filteredUsers = allUsers.filter((user) => user.toLowerCase().includes(text.toLowerCase()));\n\t\t\t\tresolve(filteredUsers);\n\t\t\t}, time);\n\t\t});\n\t}\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}