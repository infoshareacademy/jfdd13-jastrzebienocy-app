{"ast":null,"code":"var _jsxFileName = \"/home/mnisiak/Desktop/foodwaste-app/jfdd13-jastrzebienocy-app/food-waste/src/components/AddRecipe.js\";\n// Helper styles for demo\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nconst regEx = '^[a-zA-Z ]*$';\n\nclass AddRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = e => {\n      e.preventDefault();\n      fetch('https://foodwaste-ecb78.firebaseio.com/recipes', {});\n    };\n\n    this.state = {\n      text: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"HeaderAdd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Nowy przepis\"), React.createElement(Formik, {\n      initialValues: {\n        name: \"\",\n        category: \"\",\n        description: \"\",\n        products: \"\",\n        cookingTime: \"\",\n        weight: \"\",\n        imageUrl: \"\",\n        portions: \"\"\n      },\n      onSubmit: async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      },\n      validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"Required\").matches(regEx, 'Możesz użyć tylko słów'),\n        category: Yup.string(),\n        description: Yup.string().required(\"Required\"),\n        products: Yup.string().required(\"Required\"),\n        cookingTime: Yup.number().integer().positive(),\n        weight: Yup.number().required(\"Required\"),\n        imageUrl: Yup.string().url(),\n        portions: Yup.number().integer().positive()\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, props => {\n      const values = props.values,\n            touched = props.touched,\n            errors = props.errors,\n            dirty = props.dirty,\n            isSubmitting = props.isSubmitting,\n            handleChange = props.handleChange,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            handleReset = props.handleReset;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Nazwa przepisu\"), React.createElement(\"input\", {\n        id: \"name\",\n        placeholder: \"Wpisz nazw\\u0119 przepisu\",\n        type: \"text\",\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.name && touched.name ? \"text-input error\" : \"text-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), errors.name && touched.name && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, errors.name), React.createElement(\"label\", {\n        htmlFor: \"category\",\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Rodzaj kuchni\"), React.createElement(\"input\", {\n        id: \"category\",\n        placeholder: \"Wybierz kuchni\\u0119\",\n        type: \"text\",\n        value: values.category,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.category && touched.category ? \"text-input error\" : \"text-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), errors.category && touched.category && React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, errors.name), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"outline\",\n        onClick: handleReset,\n        disabled: !dirty || isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Submit\"));\n    }));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["/home/mnisiak/Desktop/foodwaste-app/jfdd13-jastrzebienocy-app/food-waste/src/components/AddRecipe.js"],"names":["MoreResources","DisplayFormikState","React","Formik","Yup","regEx","AddRecipe","Component","constructor","props","submitForm","e","preventDefault","fetch","state","text","render","name","category","description","products","cookingTime","weight","imageUrl","portions","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","matches","number","integer","positive","url","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display"],"mappings":"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","sourcesContent":["// Helper styles for demo\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst regEx = '^[a-zA-Z ]*$';\n\nclass AddRecipe extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            text: ''\n        }\n    }\n\n    submitForm = e => {\n        e.preventDefault();\n\n        fetch('https://foodwaste-ecb78.firebaseio.com/recipes', \n        {})\n        \n    }\n\n    render(){\n        return(\n            <div className=\"HeaderAdd\">\n    <h1>\n      Nowy przepis\n    </h1>\n\n    <Formik\n      initialValues={{ name: \"\", category: \"\", description: \"\", products: \"\", cookingTime: \"\", weight: \"\", imageUrl: \"\", portions: \"\" }}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required(\"Required\")\n          .matches(regEx, 'Możesz użyć tylko słów'),\n        category: Yup.string(),\n        description: Yup.string()\n          .required(\"Required\"),\n        products: Yup.string()\n        .required(\"Required\"),\n        cookingTime: Yup.number()\n         .integer()\n         .positive(),\n        weight: Yup.number()\n            .required(\"Required\"),\n        imageUrl: Yup.string()\n            .url(),\n        portions: Yup.number()\n            .integer()\n            .positive()\n\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"name\" style={{ display: \"block\" }}>\n              Nazwa przepisu\n            </label>\n            <input\n              id=\"name\"\n              placeholder=\"Wpisz nazwę przepisu\"\n              type=\"text\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.name && touched.name\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.name && touched.name && (\n              <div className=\"input-feedback\">{errors.name}</div>\n            )}\n\n            \n            <label htmlFor=\"category\" style={{ display: \"block\" }}>\n              Rodzaj kuchni\n            </label>\n            <input\n              id=\"category\"\n              placeholder=\"Wybierz kuchnię\"\n              type=\"text\"\n              value={values.category}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.category && touched.category\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.category && touched.category && (\n              <div className=\"input-feedback\">{errors.name}</div>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"outline\"\n              onClick={handleReset}\n              disabled={!dirty || isSubmitting}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n\n            \n          </form>\n        );\n      }}\n    </Formik>\n\n \n  </div>\n\n\n\n        )\n\n\n\n\n    }\n\n\n\n}\n\nexport default AddRecipe;"]},"metadata":{},"sourceType":"module"}